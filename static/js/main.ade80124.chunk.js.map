{"version":3,"sources":["Components/Scroll.jsx","Components/laplace.jsx","Components/Bar.jsx","Components/HistoTabs.jsx","App.js","serviceWorker.js","index.js"],"names":["Scroll","props","direction","wrap","undefined","flexDirection","myStyle","overflowY","border","height","padding","paddingTop","width","display","flexWrap","style","className","children","laplace","mu","b","U","Math","random","log","abs","Bars","data","console","responsive","animate","duration","onLoad","domainPadding","x","theme","VictoryTheme","material","top","bottom","left","right","label","name","axisLabel","margin","tickLabelComponent","textAnchor","angle","barRatio","cornerRadius","fill","alignment","labels","d","y","dependentAxis","tickFormat","TabPanel","value","index","other","role","hidden","id","aria-labelledby","Box","a11yProps","HistoTabs","colmns","headers","reGenerate","usingSize","sizeOrNUmber","dataHw2","E","privacyBudget","useState","bars","setBars","anonBars","setAnonBars","mses","setMses","msesDisplay","setMsesDisplay","noisyMax","setNoisyMax","useEffect","reload","datahw2","datahw2Member","i","length","j","push","Number","Array","sort","a","binSize","myBins","addition","bins","max","start","count","begin","finish","barsGenerator","myData","myBars","flexBasis","Bar","noiseGenerator","limiter","u","noiseValue","anonBins","JSON","parse","stringify","ceil","anonbars","allMSE","memberMSE","pow","toFixed","MSE","currentMSE","maxes","range","setValue","Tabs","onChange","event","newValue","aria-label","centered","Tab","mytable","App","setData","dataHW2","setDataHW2","setsizeOrNUmber","originalHeaders","setoriginalHeaders","link","setlink","setE","setbins","binsSize","setbinsSize","loaded","setloaded","setreGenerate","setreload","onSelectionChange","target","rows","Papa","header","delimiter","download","complete","results","pop","shift","myrows","currentrow","onSubmit","preventDefault","type","cellPadding","cellSpacing","step","min","defaultChecked","for","disabled","opacity","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ade80124.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n  var direction;\r\n  var wrap =\"\"\r\n  if ( props.flexDirection !== undefined){\r\n    direction = props.flexDirection\r\n  }else {\r\n    direction = \"row\"\r\n    wrap = \"wrap\"\r\n  }\r\n  let myStyle = {\r\n    overflowY:'scroll', border:'1px solid black', height:'45rem', padding:'1rem',\r\n     paddingTop:'0', width:\"100vw\",  display: \"flex\",\r\n  flexDirection:direction,\r\n  flexWrap: wrap,\r\n\r\n} \r\n  return (\r\n    <div style={myStyle} className=\" ma0\">\r\n    {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;\r\n","// u=0\r\n// b = GS/epsilion \r\n// const laplace = (b,x,u) => {\r\n//  return ( (1/(2*b))* (Math.E**(- (Math.abs(x-u)/b) )))\r\n// };\r\n// console.log(laplace(1/0.01, -0.5,0));\r\n\r\n\r\nfunction sgn(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n\r\n// From wikipedia:\r\n// Lap(X) = mu - b sgn(U) ln (1-2|U|) where U is a random variable between -0.5 and 0.5\r\n// mu = mean , b = GS/e\r\nfunction laplace(mu, b) {\r\n    var U = Math.random() - 0.5;\r\n    return mu - (b * sgn(U) * Math.log(1 - 2* Math.abs(U)));\r\n}\r\n// console.log(laplace(0,1/0.1));\r\n\r\nexport default laplace;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryAxis\r\n} from \"victory\";\r\n\r\n\r\n\r\nconst Bars = (props) => {\r\n    let data = props.data\r\n    \r\n   console.log(\"got the data\", data);\r\n  return (\r\n    <div style={props.style}>\r\n      <VictoryChart\r\n        responsive={false}\r\n        animate={{\r\n          duration: 100,\r\n          onLoad: { duration: 1000 }\r\n        }}\r\n        domainPadding={{ x: 40 }}\r\n        theme={VictoryTheme.material}\r\n        padding={{ top: 30, bottom: 90, left: 30, right: 30 }}\r\n      >\r\n        <VictoryAxis \r\n        label={props.name}\r\n        style={{ axisLabel: { padding: 68, margin:20 } }}\r\n        tickLabelComponent={<VictoryLabel textAnchor=\"start\" angle={90} />}\r\n        />\r\n        <VictoryBar\r\n          barRatio={0}\r\n          cornerRadius={2} // Having this be a non-zero number looks good when it isn't transitioning, but looks like garbage when it is....\r\n          style={{ data: { fill: \"#ff0000\" } }}\r\n          alignment=\"middle\"\r\n          labels={d => d.y}\r\n          data={props.data\r\n          }\r\n        />\r\n        <VictoryAxis\r\n      dependentAxis\r\n      label={\"Frequency\"}\r\n      // axisLabelComponent={<VictoryLabel dy={20}/>}\r\n      // fixLabelOverlap={true}\r\n      tickFormat={y => {\r\n        if (y>1000){\r\n         return `${y/1000}k`\r\n        }else{\r\n          return y\r\n        }\r\n       }}\r\n\r\n      style={{ axisLabel: { padding: 30, margin:20 } }}\r\n      />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bars;","import React,{useState, useEffect, Fragment} from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Scroll from './Scroll'\r\nimport laplace from './laplace'\r\nimport Bars from './Bar'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box >\r\n            {/* <Typography> */}\r\n                {children}\r\n                {/* </Typography> */}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n// ---------------------------------\r\nconst HistoTabs = (props)=>{\r\n    const colmns = props.colmns\r\n    const headers = props.headers\r\n    const reGenerate = props.reGenerate\r\n    const usingSize = props.sizeOrNUmber\r\n    const dataHw2 = props.dataHw2\r\n    const E = props.privacyBudget\r\n    const [bars, setBars ] = useState([]);\r\n    const [anonBars, setAnonBars ] = useState([]);\r\n    const [mses, setMses ] = useState([]);\r\n    const [msesDisplay, setMsesDisplay ] = useState([]);\r\n    const [noisyMax, setNoisyMax ] = useState([]);\r\n   \r\n\r\n    useEffect(() => {\r\n      setMses([])\r\n    }, [props.reload]);\r\n    useEffect(() => {\r\n      console.log(\"histos\");\r\n      console.log(colmns);\r\n      console.log(dataHw2);\r\n\r\n      // new way of bars\r\n      let datahw2 = []\r\n      let datahw2Member = []\r\n      for (let i = 0; i < dataHw2[0].length; i++) {\r\n        //rows\r\n        for (let j = 0; j < dataHw2.length; j++) {\r\n          datahw2Member.push(Number(dataHw2[j][i]))\r\n        }\r\n        datahw2.push(Array( datahw2Member))\r\n        datahw2Member = []\r\n      }\r\n      console.log(\"new data\");\r\n      for (let i = 0; i < datahw2.length; i++) {\r\n        datahw2[i][0] = datahw2[i][0].sort(function(a, b){return a - b})\r\n      }\r\n      console.log(datahw2);\r\n      \r\n        // using bins \r\n        // go through the columns\r\n        var myBins = [[]]\r\n        let binSize\r\n        if(!usingSize){\r\n        for (let i = 0; i < datahw2.length; i++) {\r\n           binSize = datahw2[i][0].length/Number(props.bins)\r\n          let max =  Math.max(...datahw2[i][0]);\r\n          let start = 0;\r\n          let count = 0;\r\n          for (let j = 0; j < datahw2[i][0].length; j++) {\r\n            if ( count <  binSize){\r\n              count ++\r\n            }else{\r\n              myBins[i].push({begin: start, finish:datahw2[i][0][j], count: Number(count)})\r\n              count = 1;\r\n              start = datahw2[i][0][j]\r\n              \r\n\r\n            }\r\n          }\r\n          if ( count !==1){\r\n            myBins[i].push({begin: start, finish:max, count: Number(count)})\r\n          }\r\n          if ( i !== datahw2.length-1){\r\n            myBins.push([])\r\n          }\r\n        }\r\n        // using the size\r\n      }else{\r\n        for (let i = 0; i < datahw2.length; i++) {\r\n          let addition = 0;\r\n          if (i===datahw2.length-1){\r\n            if(Number(props.bins[0])>=70){\r\n              binSize= Number(props.bins[0])\r\n            }else{\r\n              binSize = 70\r\n            }\r\n          }else if (i===0){\r\n            if(Number(props.bins[0])>=4){\r\n              binSize= Number(props.bins[0])\r\n            }else{\r\n              binSize = 4\r\n            }\r\n          }else{\r\n            binSize = Number(props.bins[0])\r\n          }\r\n          addition = Number(binSize)\r\n\r\n          // binSize = (i===datahw2.length-1)?(Number(props.bins[0])>=70)?( Number(props.bins[0]) ): 70:Number(props.bins[0])\r\n          // let addition = (i===datahw2.length-1)?(Number(props.bins[0])>=70)?( Number(props.bins[0]) ): 70:Number(props.bins[0])\r\n         let max =  Math.max(...datahw2[i][0]);\r\n         let start = 0;\r\n         let count = 0;\r\n         for (let j = 0; j < datahw2[i][0].length; j++) {\r\n           let element = datahw2[i][0][j]\r\n           if ( element< ( binSize)){\r\n             count ++\r\n           }else{\r\n             myBins[i].push({begin: start, finish:binSize, count: Number(count)})\r\n             count = 0;\r\n             start = binSize\r\n             binSize += addition\r\n             j -=1\r\n           }\r\n         }\r\n         if ( count !==0){\r\n           myBins[i].push({begin: start, finish:max, count: Number(count)})\r\n         }\r\n         if ( i !== datahw2.length-1){\r\n           myBins.push([])\r\n         }\r\n       }\r\n      }\r\n        console.log(myBins)\r\n        // fix data for bars\r\n        \r\n        const barsGenerator =(myBins) =>  {\r\n          let myData = [[]]\r\n          for (let i = 0; i < myBins.length; i++) {\r\n          for (let j = 0; j < myBins[i].length; j++) {\r\n            myData[i].push({x:`[${myBins[i][j].begin}, ${myBins[i][j].finish})`,y:myBins[i][j].count})\r\n          }\r\n          if ( i !== myBins.length-1){\r\n            myData.push([])\r\n          }\r\n        }\r\n        let myBars = []\r\n        for (let i = 0; i < myData.length; i++) {\r\n          if( i === myData.length-1){\r\n            let style = {flexBasis:\"50%\"};\r\n            myBars.push(<Fragment>\r\n              <div style={{flexBasis:\"100%\"}}></div>\r\n              <Bars style={style} name={headers[i]} data={myData[i]}></Bars>\r\n              <div style={{flexBasis:\"100%\"}}></div>\r\n            </Fragment>)  \r\n          }else{\r\n            let style = {flexBasis:\"30%\"};\r\n          myBars.push(<Bars style={style} name={headers[i]} data={myData[i]}></Bars>)\r\n        }\r\n        }\r\n        return [myData, myBars]\r\n      }\r\n        let bars =  barsGenerator(myBins)\r\n        setBars(bars[1])\r\n        console.log(\"mydata\", bars[0]);\r\n\r\n\r\n        // annonymization -----------------------\r\n        const noiseGenerator = (limiter,u,b)=>{\r\n          let noiseValue \r\n          // !(noiseValue <= limiter) ||\r\n          while ( !(noiseValue > -limiter)){\r\n            noiseValue = laplace(u,b)\r\n          }\r\n          return noiseValue\r\n        }\r\n        // go through columns\r\n        let anonBins = JSON.parse(JSON.stringify(myBins));\r\n        console.log(\"anonyBIns\", anonBins);\r\n        for (let i = 0; i < anonBins.length; i++) {\r\n          // go through the bars of the specific column\r\n          for (let j = 0; j < anonBins[i].length; j++) {\r\n            anonBins[i][j].count += Math.ceil( noiseGenerator(anonBins[i][j].count,0,1/E))\r\n          }\r\n        }\r\n        let anonbars = barsGenerator(anonBins)\r\n        setAnonBars(anonbars[1])\r\n        console.log(\"myAnondata\", anonbars[0]);\r\n        \r\n        // MSE calculation \r\n        let allMSE = []\r\n        let memberMSE = 0;\r\n        for (let i = 0; i < anonBins.length; i++) {\r\n          // go through the bars of the specific column\r\n          for (let j = 0; j < anonBins[i].length; j++) {\r\n            memberMSE += Math.pow(myBins[i][j].count-anonBins[i][j].count, 2 )\r\n          }\r\n          memberMSE = (memberMSE/anonBins[i].length).toFixed(3)\r\n          console.log(\"member\",memberMSE);\r\n          allMSE.push({name:headers[i],MSE:Number(memberMSE),bins: usingSize?`S(${props.bins[0]})`:`N(${props.bins})`})\r\n        }\r\n        console.log(\"MSE\", allMSE);\r\n        console.log(\"current\", mses);\r\n        let currentMSE= mses;\r\n        \r\n        for (let i = 0; i < currentMSE.length; i++) {\r\n          allMSE[i].MSE = Number(((allMSE[i].MSE + currentMSE[i].MSE)/2).toFixed(3))\r\n          allMSE[i].bins = currentMSE[i].bins + ` ${allMSE[i].bins}`\r\n        }\r\n        console.log(\"totalMSE\", allMSE);\r\n        setMses(allMSE)\r\n\r\n        let display = []\r\n        for (let i = 0; i < allMSE.length; i++) {\r\n        display.push(<p>{`${allMSE[i].name}:  ${allMSE[i].MSE} ,Calculation Bins:${allMSE[i].bins}`}</p>)\r\n        }\r\n        console.log(\"displays\", display);\r\n        setMsesDisplay(display)\r\n\r\n        //maxes \r\n        let maxes = []\r\n        for (let i = 0; i < anonBins.length; i++) {\r\n          let max = 0\r\n          let range= 0\r\n          for (let j = 0; j < anonBins[i].length; j++) {\r\n            if (anonBins[i][j].count > max){\r\n              range =`[${anonBins[i][j].begin}, ${anonBins[i][j].finish}]`\r\n              max = anonBins[i][j].count;\r\n            }\r\n          }\r\n          maxes.push(` ${headers[i]}: ${range} `)\r\n        }\r\n        console.log(\"MAAAAAAAXES\",maxes)\r\n        setNoisyMax(maxes)\r\n        //----- end the way of bars\r\n      \r\n     },[props.reload, props.reGenerate])\r\n\r\n     \r\n     \r\n    \r\n//choosing age to begin with \r\n\r\n// starting with findin the frequency of the dimension/quasi\r\n\r\n// first choose the most suitable dimension\r\n/**\r\n * * large difference between min and max\r\n * * have more \"unique\" values \r\n//  */\r\n\r\n\r\nconst [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n      return (\r\n        <div className=\"center\">\r\n\r\n            \r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"simple tabs example\"\r\n            centered\r\n          >\r\n            <Tab label=\"Histograms\" {...a11yProps(0)} />\r\n            <Tab label=\"Stats\" {...a11yProps(1)} />\r\n          </Tabs>\r\n          {reGenerate<2 ? \r\n          <Fragment>\r\n          <TabPanel value={value} index={0}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Scroll>\r\n                <div className=\"Histograms\">\r\n                {bars}\r\n                </div>\r\n    \r\n              <h2 className=\"center\">Anonymized Histograms</h2>\r\n\r\n              <div className=\"Histograms\">\r\n              {anonBars}\r\n              <h3 className=\"db\" style={{flexBasis:\"100%\"}}>Noisy Maxes</h3>\r\n              {noisyMax}\r\n              </div>\r\n              </Scroll>\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} >\r\n            <Scroll flexDirection={\"column\"} className=\"w-100\">\r\n            \r\n            <h4>The displayed values are for all the generated bins</h4>\r\n            <p>where N(x) means used in number of bins with number x<br></br>\r\n            and S(x) means used in size of bins with size x\r\n            </p>\r\n            {msesDisplay}\r\n            \r\n            </Scroll>\r\n          </TabPanel>\r\n          </Fragment>: \"\"}\r\n        </div>\r\n      );\r\n    \r\n}\r\n\r\n\r\nexport default HistoTabs;","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Papa from 'papaparse';\n\nimport './tables.css'\nimport HistoTabs from './Components/HistoTabs'\nvar mytable = [];\n\nfunction App() {\n  const [data, setData] = useState([{}]);\n  const [dataHW2, setDataHW2] = useState([{}]);\n  const [sizeOrNUmber,setsizeOrNUmber] = useState(false)\n  const [originalHeaders,setoriginalHeaders] = useState([])\n  \n  //  K-anonymization/ipumsHW2-test.csv\n  // \n  const [link, setlink] = useState(\"/ipumsHW2-test.csv\");\n  const [E, setE] = useState(0.1);\n  const [bins, setbins] = useState(2);\n  const [binsSize, setbinsSize] = useState(2);\n  const [loaded, setloaded] = useState(false);\n  const [reGenerate, setreGenerate] = useState(3);\n  const [reload, setreload] = useState(false);\n\n// Age Gender Marital Race Status Birth place Language Occupation Income (K) \n\n \n  const   onEChange  = (event)=>{\n    setE( event.target.value);\n    // console.log(event.target.value);\n  }\n  const   onbinsChange  = (event)=>{\n    setbins( event.target.value);\n    // console.log(event.target.value);\n  }\n  const   onbinsSizeChange  = (event)=>{\n    setbinsSize( event.target.value);\n    // console.log(event.target.value);\n  }\n  const onLinkChange = (event)=>{\n    setlink( event.target.value);\n    // console.log(event.target.value);\n  }\n  const onSelectionChange = (event)=>{\n    if ( event.target.value === \"size\"){\n      setsizeOrNUmber(true)\n    }else{\n      setsizeOrNUmber(false)\n    }\n    console.log(event.target.value);\n  }\n  const submitHandler = (event)=>{\n    event.preventDefault();\n      if(reGenerate===0){\n        setreGenerate(1)    \n      }else{\n        setreGenerate(0)\n      }\n    // console.log(\"submitted\");\n  }\n\n  const dataSubmitHandler =(event)=>{\n    event.preventDefault();\n    setreload(!reload)\n    setloaded(false)\n    setreGenerate(3)\n    // console.log(\"submitted\");\n  }\n\n   // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    \nvar rows;\n//http://localhost:3000/ipums-solution.csv\nPapa.parse(link, {\n    header: false,\n    delimiter: \";\",\n    download: true,\n    complete: function(results) {\n        console.log(\"Finished:\", results.data);\n    rows = results.data;\n    let headers=[];\n    for (let i = 0; i < rows[0].length; i++) {\n      headers.push(<th className=\" pa2\">{rows[0][i]}</th>) \n    }\n    mytable =[ \n    <thead>\n    <tr>\n    {headers}\n    </tr>\n    </thead>\n    ]\n    \n      //clearing extra empty lines \n      console.log(rows);\n      while(rows[rows.length-1].length === 1){\n          rows.pop();\n      }\n    // rows.pop();\n    //deleting headers row \n     setoriginalHeaders( rows.shift())\n    let myrows = []\n    for (let i = 0; i < (rows.length>19? 19 : rows.length); i++) {\n      let currentrow=[];\n      for (let j = 0; j < rows[i].length; j++) {\n        currentrow.push(<td className=\" pa2\">{rows[i][j]}</td>)\n      }\n      myrows.push(<tr>{currentrow}</tr>)   \n    }\n  mytable.push(<tbody>{myrows}</tbody>)\n\n\n  let datahw2 = []\n  let datahw2Member = []\n  // col\n  for (let i = 0; i < rows[0].length; i++) {\n    //rows\n    for (let j = 0; j < rows.length; j++) {\n      datahw2Member.push({x:Number(rows[j][i])})\n    }\n    datahw2.push(Array( datahw2Member))\n    datahw2Member = []\n  }\n\n    \n  \n    setDataHW2(datahw2)\n    setData(rows)\n    setloaded(true)\n    }\n});\n  }, [reload]);\n\n\n  \n  return (\n    <div className=\"App \">\n      <div>\n        <h1>HW2 COE526</h1>\n      </div>\n      <form onSubmit={dataSubmitHandler}>\n      <label className=\"b\"> Link to Load data (csv, with Headers): </label>\n      <input className=\"bg-lightest-blue ba b--green\" type=\"text\"  onChange={onLinkChange} value={link}></input>\n      <button > Load </button>\n      </form>\n      <div className=\"orange bg-black-90 pa1\">\n      <p >Note: This tool is used to apply differntial privacy to a given data,\n        <br></br>\n        with limitation on the first and the last data to be 4 and 70 respectivally in the size \n        <br></br>\n        That in order to protect your beautiful eyes \n      </p>\n      </div>\n      {loaded?\n      <div> \n      <table className=\"shadow-2 ba center ma2\" cellPadding=\"0\" cellSpacing=\"0\">\n      {mytable}\n\n    </table>\n    </div>\n    :\n    <h4>Loading Data..</h4>\n    }\n      \n      <div className=\"pa2\">\n        <form className=\"generator\" onSubmit={submitHandler}>\n\n      <div>\n      <label className=\"b\"> E(privacy budget) value: </label>\n      <input className=\"bg-lightest-blue ba b--green e\" type=\"number\" step=\"any\" min=\"0\" max=\"0.1\" onChange={onEChange} value={E}></input>\n      </div>\n      <div>\n      <input type=\"radio\" name=\"sizeOrNumber\" value=\"number\" defaultChecked  onChange={onSelectionChange}></input>\n      <label className=\"b\" for=\"binsNumber\"> Number of Bins: </label>\n      <input className=\"bg-lightest-blue ba b--green e\" id=\"binsNumber\" type=\"number\" min=\"2\" max=\"19\" onChange={onbinsChange} value={bins} \n      disabled = {sizeOrNUmber? \"disabled\" : \"\"}\n      style ={{\n        opacity: sizeOrNUmber ? 0.25 : 1,\n      marginLeft: \"-23px\"}}\n        ></input>\n      </div>\n      <div>\n      <input type=\"radio\" name=\"sizeOrNumber\" value=\"size\"  onChange={onSelectionChange}></input>\n      <label className=\"b\" for=\"binsSize\"> Size of Bins: </label>\n      <input className=\"bg-lightest-blue ba b--green e\" id=\"binsSize\" type=\"number\" min=\"2\" max=\"400\" onChange={onbinsSizeChange} value={binsSize}\n       disabled = {!sizeOrNUmber? \"disabled\" : \"\"}\n       style ={{\n        opacity: !sizeOrNUmber ? 0.25 : 1,\n        marginLeft: \"-23px\"}}\n        ></input>\n      </div>\n      {/* <br></br>      <br></br>\n      <br></br> */}\n      <div >\n      <button > Generate </button>\n      </div>\n      </form>\n      </div>\n      <div>\n        <h2>Private Histogram</h2>\n        { reGenerate<3 ? \n        <div>\n          <div className=\"Histograms\">\n          <HistoTabs \n          privacyBudget ={E}\n          sizeOrNUmber = {sizeOrNUmber} bins={sizeOrNUmber ? [binsSize] : bins}\n           colmns={data[0].length}  data={dataHW2} dataHw2={data} \n            headers={originalHeaders} reGenerate={reGenerate} reload={reload}/>\n          \n          {/* {histograms} */}\n          </div>\n        </div>\n        :\n        <h3>Click Generate to show Histogram & statistics...</h3>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}